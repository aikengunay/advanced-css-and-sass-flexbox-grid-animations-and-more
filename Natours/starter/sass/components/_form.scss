@use "../base/global" as *;

.form {
  // add a margin bottom excep the last child of the group class
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    // inherit the font family
    //when creating form and input elements, make sure inherit font and color
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color: $color-white, $alpha: 0.5);
    border: none;
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;
    transition: all 0.3s;

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color: $color-black, $alpha: 0.1);
      border-bottom: 3px solid $color-primary;
    }

    // if the input value is invalid, it goes ornage
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    // when you type, it becomes dark
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;
    transition: all 0.3s;
  }

  // SIBLING SELECTOR
  //this is a sibling selector that does not need to be inside of a parent since they are siblings
  // sibling selector
  // sibling is right next to the element and that is the input
  // to make this work, the label needs to be after the input in order to be selected to the sibling selector
  // if the input placeholder is still being displayed, hide the input label until i type something
  &__input:placeholder-shown + &__label {
    // when hiding an element use opacity and visibiilty together
    opacity: 0;
    // cannot animate visibility so use opacity too
    visibility: hidden;
    // move text up
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block;
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 5rem;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -0.4rem;

    // Selected state
    &::after {
      content: "";
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      // hide it for now
      opacity: 0;
    }
  }

  // when i select the radio button, the styling of our custom radio button will be applied
  //manipulate the checked state inside the radio-label, specifically the after pseudo element of the radio button
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
}
